name: Sample CI/CD Pipeline
on:
  push:
    branches: [main]

env:
  # Hardcoded credentials (vulnerability)
  DATABASE_PASSWORD: "supersecretpassword123"
  API_KEY: "AKIAIOSFODNN7EXAMPLE"
  DOCKER_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # No version pinning or hash verification (vulnerability)
      - name: Setup Node.js
        uses: actions/setup-node@v1
      
      # Insecure dependency installation without lockfile (vulnerability)
      - name: Install dependencies
        run: npm install
      
      - name: Build application
        run: npm run build
      
      - name: Run tests
        run: npm test
        
      # No security scanning step (best practice issue)
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Pipeline runs with excessive permissions (vulnerability)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.API_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          # No role assumption or least privilege (vulnerability)
      
      - name: Login to Docker Hub
        # Using default token without scope restriction (vulnerability)  
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      # No image scanning before deployment (best practice issue)
      - name: Build and push Docker image
        run: |
          docker build -t myapp:${{ env.DOCKER_TAG }} .
          docker push myapp:${{ env.DOCKER_TAG }}
      
      # Command injection vulnerability
      - name: Deploy application
        run: |
          APP_NAME="my-app-${{ github.event.pull_request.number }}"
          eval "kubectl deploy ${APP_NAME}"
          
      # No SBOM generation (best practice issue)
      
      # No signing/verification of artifacts (vulnerability)