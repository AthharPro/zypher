name: Ungoverned 3rd Party Services Example Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        # Using a version tag instead of commit SHA (vulnerability)
        uses: actions/checkout@v2
      
      # Using a third-party action without proper vetting (vulnerability)
      - name: Run third-party linter
        uses: untrusted-org/super-linter@v4
      
      # Using outdated versions of common actions (vulnerability)
      - name: Setup Node.js
        uses: actions/setup-node@v1
      
      # Downloading and executing scripts directly (vulnerability)
      - name: Download and run setup script
        run: curl -s https://example.com/setup.sh | bash
      
      # Installing packages without verification (vulnerability)
      - name: Install dependencies
        run: |
          curl -s https://example.com/get-deps.sh > get-deps.sh
          chmod +x get-deps.sh
          ./get-deps.sh
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    # Excessive permissions granted to this job (vulnerability)
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
    
    steps:
      # Third-party action with elevated permissions (vulnerability)
      - name: Deploy to production
        uses: unknown-publisher/deployment-tool@master
      
      # Using Docker image without specific version (vulnerability)
      - name: Run database migration
        uses: docker://postgres
        with:
          args: psql -c "UPDATE users SET admin=true"
          
      # Using Docker image with latest tag (vulnerability)
      - name: Security scan
        uses: docker://security-scanner:latest
      
      # Direct script execution from the internet (vulnerability)
      - name: Post-deployment tasks
        run: wget -qO- https://external-scripts.example.com/post-deploy.sh | sh
        
  publish:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      # Using third-party GitHub Marketplace action without verification (vulnerability)
      - name: Publish to Registry
        uses: marketplace-publisher/publish-action@v1
        
      # Using GitLab CI with unspecific image (vulnerability for GitLab pipelines)
      - name: Run in GitLab CI container
        run: |
          docker run gitlab/gitlab-runner:latest /bin/bash -c "echo Running in unspecified version"
